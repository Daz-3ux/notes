# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#if [ -z "$TMUX"]; then tmux; fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/ 
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting extract)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias peda='echo "source ~/GdbPlugins/peda/peda.py" > ~/.gdbinit '
alias gef='echo "source ~/GdbPlugins/gef/gef.py" > ~/.gdbinit '
alias gdbinit='echo "source ~/GdbPlugins/gdbinit/gdbinit" > ~/.gdbinit  '

# æ‡’
alias sp='sudo pacman'
alias spS='sudo pacman -S'
alias syu='yay'
alias syut='yay && sudo timeshift --create --comments "after syu" --tags D'

alias SN='shutdown now'
alias vi='nvim'
alias c='clear'
alias e='exit'
alias t='trans :zh-CN'
alias cdtmp='cd  $(mktemp -d)'
alias cdatmp='cd && cd .. && cd .. && cd tmp'

alias xv='cd && cd cc/xv6-labs-2021 && make qemu'
alias fan='for i in {1..20}; do sensors | grep fan; echo " "; sleep 1; done'

#nice tool
alias ls='exa --git --icons --color=always --group-directories-first'
alias cat='bat'
alias ocr='TMP_DIR=$(mktemp -d) && flameshot gui -p "$TMP_DIR/screenshot.png" 2>/dev/null && tesseract "$TMP_DIR/screenshot.png" stdout | sed "/^\s*$/d" | tee /dev/tty | sed "/^\s*$/d" | xargs -I{} trans -b :zh "{}"'
#alias find='fd'
alias du='dust'

# curl cheat.sh/ls
wtf() {
  curl cheat.sh/$1
}

eval "$(starship init zsh)"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme

source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme

eval $(thefuck --alias)
cctl(){
  token="9416bebc-70a7-4474-9cc0-32982fedbc18"
  Auth="Authorization: Bearer ${token}"
  api="http://127.0.0.1:9005"
  proxy=$(curl -s -H $Auth $api/proxies |jq '.proxies|[map(.)[]|select(has("type") and (.type=="URLTest" or .type=="Selector") and .name!="GLOBAL" )]')
  if [[ "$1" == "ls" || "$1" == "" ]] {
    echo $proxy | jq -r ".[]|{name,type,now}"
    return
  }
  
  if [[ $1 == "set" ]] {
    target=$(echo $proxy | jq -r '.[]|select(.type=="Selector").name'|fzf --prompt "Select Target Group >")
    if [[ "$target" == "" ]] {
      return 1
    }
    target_proxy=$(echo $proxy |jq -r ".[]|select(.name==\"$target\").all[]"|fzf)
    if [[ "$target_proxy" == "" ]] {
      return 1
    }
    curl -s -X PUT -H $Auth $api/proxies/$target -d "{\"name\":\"${target_proxy}\"}"
  }
}
